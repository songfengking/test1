<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="EngineParts"
        xmlns="http://ibatis.apache.org/mapping"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <statements>
    <!-- ************************************************************************************** -->
    <!-- [エンジン部品一覧:共通検索]                                                            -->
    <!-- ************************************************************************************** -->
    <statement id="SelectEnginePartsList">
      SELECT
        BKJ.KATA_CD     productModelCd,　　 <!--生産型式コード-->
        BKJ.KIBAN       serial6,            <!--機番-->
        BKJ.LINE_CD     stationCd, 			    <!--ステーションコード-->
        NULL            stationNm,          <!--ステーション名(別途割当)-->
        BKJ.BUHIN_KUBUN partsTypeCd,        <!--部品区分-->
        BKJ.BUHIN_KIBAN partsSerial,        <!--部品機番-->
        BKJ.K_HINBAN    partsKubotaNum,     <!--部品クボタ品番-->
        BKJ.M_HINBAN    partsMakerNum,      <!--部品メーカー品番-->
        BKJ.NEW_YMD     installDt,          <!--組付日-->
        BKJ.RAIREKI_N   historyIndex        <!--来歴No-->
      FROM
        ENGBKJ_F BKJ
      INNER JOIN
      (
        SELECT 
          KATA_CD, KIBAN, BUHIN_KUBUN, MAX(RAIREKI_N) RAIREKI_N, MAX(NEW_YMD) NEW_YMD
        FROM
          ENGBKJ_F
        GROUP BY
          KATA_CD, KIBAN, BUHIN_KUBUN
      ) BKJ_G ON BKJ.KATA_CD = BKJ_G.KATA_CD AND BKJ.KIBAN = BKJ_G.KIBAN AND BKJ.BUHIN_KUBUN = BKJ_G.BUHIN_KUBUN AND BKJ.NEW_YMD = BKJ_G.NEW_YMD AND BKJ.RAIREKI_N = BKJ_G.RAIREKI_N
      WHERE
	      BKJ.KOJO_CD = '28' 
        <!-- [機番検索](modelCd/serial6メンバを含むリスト) -->
        <isNotEmpty property="paramSerialList" prepend="AND">
          (BKJ.KATA_CD, BKJ.KIBAN) IN
          <iterate property="paramSerialList" open="(" close=")" conjunction="," >
            (#paramSerialList[].productModelCd#, #paramSerialList[].serial6#)
          </iterate>
        </isNotEmpty>
        <!-- [生産型式コード検索] -->
        <isNotEmpty property="paramProductModelCd" prepend="AND">
          BKJ.KATA_CD like #paramProductModelCd# || '%'
        </isNotEmpty>
        <!-- [生産型式コードリスト検索(型式名からの逆引き用)] -->
        <isNotEmpty property="paramProductModelCdList" prepend="AND">
          BKJ.KATA_CD IN
          <iterate property="paramProductModelCdList" open="(" close=")" conjunction="," >
            #paramProductModelCdList[]#
          </iterate>
        </isNotEmpty>
        <!-- [部品区分検索] -->
        <isNotEmpty property="paramPartsCd" prepend="AND">
          BKJ.BUHIN_KUBUN = #paramPartsCd#
        </isNotEmpty>
        <!-- [部品品番検索] -->
        <isNotEmpty property="paramPartsNum" prepend="AND">
          BKJ.K_HINBAN like #paramPartsNum# || '%'
        </isNotEmpty>
        <!-- [部品機番検索] -->
        <isNotEmpty property="paramPartsSerial" prepend="AND">
          BKJ.BUHIN_KIBAN like #paramPartsSerial# || '%'
        </isNotEmpty>
        <!-- [組付日(FROM)検索] -->
        <isNotEmpty property="paramInstallDtFrom" prepend="AND">
          BKJ.NEW_YMD <![CDATA[>=]]> #paramInstallDtFrom#
        </isNotEmpty>
        <!-- [組付日(TO)検索] -->
        <isNotEmpty property="paramInstallDtTo" prepend="AND">
          BKJ.NEW_YMD <![CDATA[<=]]> #paramInstallDtTo#
        </isNotEmpty>
    </statement>

    <!-- ************************************************************************************** -->
    <!-- [エンジン部品一覧:3C検索]                                                              -->
    <!-- ************************************************************************************** -->
    <statement id="SelectEngine3cList">
      SELECT
        BKJ.KATA_CD     productModelCd,　　 <!--生産型式コード-->
        BKJ.KIBAN       serial6,            <!--機番-->
        BKJ.LINE_CD     stationCd, 			    <!--ステーションコード-->
        NULL            stationNm,          <!--ステーション名(別途割当)-->
        BKJ.BUHIN_KUBUN partsTypeCd,        <!--部品区分-->
        BKJ.BUHIN_KIBAN partsSerial,        <!--部品機番-->
        BKJ.K_HINBAN    partsKubotaNum,     <!--部品クボタ品番-->
        BKJ.M_HINBAN    partsMakerNum,      <!--部品メーカー品番-->
        BKJ.NEW_YMD     installDt,          <!--組付日-->
        BKJ.RAIREKI_N   historyIndex,       <!--来歴No-->
        BKJ_D.PROCESSING_LINE processLine,  <!--加工ライン-->
        BKJ_D.CRITICAL_PARTS_NM partsNm,    <!--部品名-->
        BKJ_D.MATERIAL_PROCESSING_DATE processYmd, <!--加工日-->
        BKJ_D.MATERIAL_PROCESSING_NUM processNum,  <!--連番-->
        BKJ_D.REMARKS   remarks,            <!--修正理由-->
        CASE
            WHEN BKJ_D.REMARKS IS NOT NULL THEN BKJ_D.UPDATE_BY
            ELSE    NULL
        END     UPDATE_BY                    <!--修正者-->      
      FROM
        ENGBKJ_F BKJ
      INNER JOIN
      (
        SELECT 
          KATA_CD, KIBAN, BUHIN_KUBUN, MAX(RAIREKI_N) RAIREKI_N, MAX(NEW_YMD) NEW_YMD
        FROM
          ENGBKJ_F
        GROUP BY
          KATA_CD, KIBAN, BUHIN_KUBUN
      ) BKJ_G ON BKJ.KATA_CD = BKJ_G.KATA_CD AND BKJ.KIBAN = BKJ_G.KIBAN AND BKJ.BUHIN_KUBUN = BKJ_G.BUHIN_KUBUN AND BKJ.NEW_YMD = BKJ_G.NEW_YMD AND BKJ.RAIREKI_N = BKJ_G.RAIREKI_N
      INNER JOIN 
        TT_SQ_3C_DETAIL BKJ_D ON BKJ.LINE_CD = BKJ_D.STATION_CD AND BKJ.KATA_CD = BKJ_D.MODEL_CD AND BKJ.KIBAN = BKJ_D.SERIAL6 AND BKJ.BUHIN_KUBUN = BKJ_D.CRITICAL_PARTS_CD
        <!-- [加工日(FROM)検索] -->
        <isNotEmpty property="paramProcessDtFrom" prepend="AND">
          BKJ_D.MATERIAL_PROCESSING_DATE <![CDATA[>=]]> TO_CHAR(#paramProcessDtFrom#,'YYMMDD')
        </isNotEmpty>
        <!-- [加工日(TO)検索] -->
        <isNotEmpty property="paramProcessDtTo" prepend="AND">
          BKJ_D.MATERIAL_PROCESSING_DATE <![CDATA[<=]]> TO_CHAR(#paramProcessDtTo#,'YYMMDD')
        </isNotEmpty>
        <isEqual property="paramPassedRegist" compareValue="true" prepend="AND">
          BKJ_D.MATERIAL_PROCESSING_DATE = '999999'
        </isEqual>
      WHERE
	      BKJ.KOJO_CD = '28' 
        <!-- [機番検索](modelCd/serial6メンバを含むリスト) -->
        <isNotEmpty property="paramSerialList" prepend="AND">
          (BKJ.KATA_CD, BKJ.KIBAN) IN
          <iterate property="paramSerialList" open="(" close=")" conjunction="," >
            (#paramSerialList[].productModelCd#, #paramSerialList[].serial6#)
          </iterate>
        </isNotEmpty>
        <!-- [生産型式コード検索] -->
        <isNotEmpty property="paramProductModelCd" prepend="AND">
          BKJ.KATA_CD like #paramProductModelCd# || '%'
        </isNotEmpty>
        <!-- [生産型式コードリスト検索(型式名からの逆引き用)] -->
        <isNotEmpty property="paramProductModelCdList" prepend="AND">
          BKJ.KATA_CD IN
          <iterate property="paramProductModelCdList" open="(" close=")" conjunction="," >
            #paramProductModelCdList[]#
          </iterate>
        </isNotEmpty>
        <!-- [部品区分検索] -->
        <isNotEmpty property="paramPartsCd" prepend="AND">
          BKJ.BUHIN_KUBUN = #paramPartsCd#
        </isNotEmpty>
        <!-- [部品品番検索] -->
        <isNotEmpty property="paramPartsNum" prepend="AND">
          BKJ.K_HINBAN like #paramPartsNum# || '%'
        </isNotEmpty>
        <!-- [部品機番検索] -->
        <isNotEmpty property="paramPartsSerial" prepend="AND">
          BKJ.BUHIN_KIBAN like #paramPartsSerial# || '%'
        </isNotEmpty>
        <!-- [組付日(FROM)検索] -->
        <isNotEmpty property="paramInstallDtFrom" prepend="AND">
          BKJ.NEW_YMD <![CDATA[>=]]> #paramInstallDtFrom#
        </isNotEmpty>
        <!-- [組付日(TO)検索] -->
        <isNotEmpty property="paramInstallDtTo" prepend="AND">
          BKJ.NEW_YMD <![CDATA[<=]]> #paramInstallDtTo#
        </isNotEmpty>
    </statement>

    <!-- ************************************************************************************** -->
    <!-- [エンジン部品詳細:共通検索]                                                            -->
    <!-- ************************************************************************************** -->
    <statement id="SelectEnginePartsDetail">
      SELECT
        BKJ.KATA_CD     productModelCd,　　 <!--生産型式コード-->
        BKJ.KIBAN       serial6,            <!--機番-->
        BKJ.LINE_CD     stationCd,          <!--ステーションコード-->
        NULL            stationNm,          <!--ステーション名(別途割当)-->
        BKJ.BUHIN_KUBUN partsTypeCd,        <!--部品区分-->
        BKJ.BUHIN_KIBAN partsSerial,        <!--部品機番-->
        BKJ.K_HINBAN    partsKubotaNum,     <!--部品クボタ品番-->
        BKJ.M_HINBAN    partsMakerNum,      <!--部品メーカー品番-->
        BKJ.NEW_YMD     installDt,          <!--組付日-->
        BKJ.RAIREKI_N   historyIndex        <!--来歴No-->
      FROM
        ENGBKJ_F BKJ
      <isEqual property="lastHistoryDataOnly" compareValue="true">
      INNER JOIN
      (
        SELECT 
          KATA_CD, KIBAN, BUHIN_KUBUN, MAX(RAIREKI_N) RAIREKI_N, MAX(NEW_YMD) NEW_YMD
        FROM
          ENGBKJ_F
        GROUP BY
          KATA_CD, KIBAN, BUHIN_KUBUN
      ) BKJ_G ON BKJ.KATA_CD = BKJ_G.KATA_CD AND BKJ.KIBAN = BKJ_G.KIBAN AND BKJ.BUHIN_KUBUN = BKJ_G.BUHIN_KUBUN AND BKJ.NEW_YMD = BKJ_G.NEW_YMD AND BKJ.RAIREKI_N = BKJ_G.RAIREKI_N
      </isEqual>
      WHERE
        BKJ.KOJO_CD = '28' AND
        <!-- [部品区分] -->
        BKJ.BUHIN_KUBUN = #paramPartsCd# AND
        <!-- [機番検索](modelCd/serial6メンバを含むリスト) -->
        (BKJ.KATA_CD, BKJ.KIBAN) IN ((#paramSerial.productModelCd#, #paramSerial.serial6#))
      ORDER BY
        BKJ.KATA_CD, 
        BKJ.KIBAN, 
        BKJ.NEW_YMD DESC,
        BKJ.RAIREKI_N ASC
    </statement>
    
    <!-- ************************************************************************************** -->
    <!-- [エンジン部品詳細:ECU検索]                                                             -->
    <!-- ************************************************************************************** -->
    <statement id="SelectEngineEcuDetail">
      SELECT 
        ECU.LINE_CD      stationCd,            <!--ステーションコード-->
        NULL             stationNm,            <!--ステーション名(別途割当)-->
        ECU.KATA_CD      productModelCd,       <!--生産型式コード-->
        ECU.KIBAN        serial6,              <!--6桁機番-->
        ECU.MEAMNT_THN   terminalNm,           <!--端末名-->
        TO_DATE(ECU.MEAMNT_YMD || ECU.MEAMNT_HMS,'YYYYMMDDHH24MISS') inspectionDt,  <!--測定日-->
        ECU.CHKMAN_NO    userId,               <!--検査担当者ID(未登録)-->
        ECU.CHKMN_N      userNm,               <!--検査担当者名(未登録)-->
        TRIM(ECU.ECU_EG_HIN)   ecuEngineNum,   <!--ECUエンジン品番-->
        TRIM(ECU.ECU_HW_HIN)   ecuHardNum,     <!--ECUハードウェア品番-->
        TRIM(ECU.ECU_SW_HIN)   ecuSoftNum,     <!--ECUソフト品番-->
        TRIM(ECU.ECU_KIBAN)    ecuSerial,      <!--ECU機番-->
        TRIM(ECU.DS_HW_HIN)    densoHardNum,   <!--デンソーハードウェア品番-->
        TRIM(ECU.DS_SW_HIN)    densoSoftNum,   <!--デンソーソフト品番-->
        ECU.EIN          enginePrt,            <!--エンジン刻印名-->
        ECU.VIN          tractorPrt,           <!--トラクタ刻印名(未登録)-->
        ECU.OBJ_NM       objectFileNm,         <!--オブジェクトファイル名-->
        ECU.OBJ_CHKCD    objectCheckCd,        <!--オブジェクトチェックコード(未登録)-->
        ECU.OBJ_TIMES    objectTimeStamp,      <!--オブジェクトタイムスタンプ -->
        ECU.SBL_NM       sblFileNm,            <!--SBLファイル名(未登録)-->
        ECU.SBL_CHKCD    sblCheckCd,           <!--SBLチェックコード(未登録)-->
        ECU.SBL_TIMES    sblTimeStamp,         <!--SBLタイムスタンプ(未登録)-->
        ECU.KEY_NM       keyFileNm,            <!--Keyデータファイル名(未登録)-->
        ECU.KEY_CHKCD    keyCheckCd,           <!--Keyチェックコード(未登録)-->
        ECU.KEY_TIMES    keyTimeStamp,         <!--Keyタイムスタンプ(未登録)-->
        ECU.ECU_NO       ecuId,                <!--ECUユニークID-->
        ECU.ECU_CHECKSUM ecuCheckCd,           <!--ECUチェックサム-->
        CASE
          WHEN ECU.PRC_JDG = '1' THEN 'OK'
          WHEN ECU.PRC_JDG = '0' THEN 'NG'
        END prcJdg,                            <!--処理判定-->
        ECU.OEM_ID_ECU   oemIDecu,             <!--ＯＥＭ識別ＩＤ（ＥＣＵ読出）-->
        ECU.OEM_ID_REV   oemIDrev              <!--ＯＥＭ識別ＩＤ（ＲＥＶファイル）-->      
      FROM 
        ECURET_F ECU
      WHERE
        ECU.KOJO_CD = '28' AND
        <!-- [機番検索](modelCd/serial6メンバを含むリスト) -->
        (ECU.KATA_CD, ECU.KIBAN) IN ((#paramSerial.productModelCd#, #paramSerial.serial6#))
      ORDER BY
        ECU.KATA_CD, ECU.KIBAN, ECU.MEAMNT_YMD DESC, ECU.MEAMNT_HMS DESC
    </statement>
    
    <!-- ************************************************************************************** -->
    <!-- [エンジン部品詳細:インジェクター検索]                                                  -->
    <!-- ************************************************************************************** -->
    <statement id="SelectEngineInjecterDetail">
      SELECT
        INJ.LINE_CD      stationCd,            <!--ステーションコード-->
        NULL             stationNm,            <!--ステーション名(別途割当)-->
        INJ.KATA_CD      productModelCd,       <!--生産型式コード-->
        INJ.KIBAN        serial6,              <!--6桁機番-->
        INJ.THOST_N      terminalNm,           <!--端末名-->
        CYL_NO           cylinderNum,          <!--気筒No-->
        TRIM(JTCRT_DT)   injectionQuantityAdjustVal,  <!--噴射量補正データ-->
        MPART_NO         partsMakerNum,        <!--メーカー品番-->
        KPART_NO         partsKubotaNum,       <!--クボタ品番-->
        MAKER_FLG        makerFlg,             <!--メーカーフラグ-->
        CASE                                   <!--メーカー-->
          WHEN MAKER_FLG = '1' THEN 'DENSO'
          WHEN MAKER_FLG = '2' THEN 'BOSCH'
        END makerNm,
        INJPT_NO         injecterSerial,       <!--インジェクタ製番-->
        PRESS_LV         pressureLv,           <!--圧力水準-->
        INPUT_TYPE       inputTyp,             <!--入力区分(未登録)-->
        CHKMN_CD         checkmanCd,           <!--検査員コード(未登録)-->
        WORKER_NO        userId,               <!--従業員No(未登録)-->
        CHKMN_N          userNm,               <!--従業員名(未登録)-->
        TO_DATE(INPUT_YMD || INPUT_HMS,'YYYYMMDDHH24MISS') inspectionDt, <!--計測付日-->
        RAIREKI_N        historyIndex          <!--来歴No-->
      FROM 
        INJCRT_F INJ
      WHERE
        INJ.KOJO_CD = '28' AND
        <!-- [機番検索](modelCd/serial6メンバを含むリスト) -->
        (INJ.KATA_CD, INJ.KIBAN) IN ((#paramSerial.productModelCd#, #paramSerial.serial6#))
      ORDER BY
        INJ.KATA_CD, INJ.KIBAN, CYL_NO, RAIREKI_N DESC
    </statement>
    
    <!-- ************************************************************************************** -->
    <!-- [エンジン部品詳細:DPF機番]                                                             -->
    <!-- ************************************************************************************** -->
    <statement id="SelectEngineDpfDetail">
    SELECT
        DPF.工場コード                plantCd,
        DPF.ライン                    lineCd,
        DPF.ステーション              stationCd,
        NULL                          stationNm,                 <!--ステーション名(別途割当)-->
        DPF.トラクタIDNO              tractorIdno,
        DPF.トラクタ型式コード        tractorProductModelCd,
        DPF.トラクタ国コード          tractorCountryCd,
        DPF.トラクタ機番              tractorSerial,
        DPF.エンジンIDNO              engineIdno,
        DPF.エンジン型式コード        engineProductModelCd,
        DPF.工場ライン識別            plantIdentification,       <!--機番７桁の１桁目-->
        DPF.エンジン機番              engineSerial,
        DPF.取付日時                  installDt,
        DPF.強制登録サイン            forceRegistSign,
        DPF.抜取検査サイン            sampleInspectionSign,
        CASE
          DPF.抜取検査サイン = '0' THEN '無' 
          DPF.抜取検査サイン = '1' THEN '有'
        END sampleInspectionNm,
        DPF.DPFフルアッシ型式コード   dpfFullAssyProductModelCd,
        DPF.DPFフルアッシ機番         dpfFullAssySerial,
        DPF.作成日時                  createDt,
        DPF.作成者                    createUserId,
        DPF.作成プログラム            createUserPg,
        DPF.更新日時                  updateDt,
        DPF.更新者                    updateUserId,
        DPF.更新プログラム            updateUserPg 
    FROM
        TBL_DPF機番情報 DPF
    WHERE
        <!-- [機番検索](modelCd/serial6メンバを含む) -->
        (DPF.エンジン型式コード, DPF.エンジン機番) IN ((#paramSerial.productModelCd#, #paramSerial.serial6#))
    </statement>

    <!-- ************************************************************************************** -->
    <!-- [エンジン部品一覧:設備情報検索]                                                            -->
    <!-- ************************************************************************************** -->
    <statement id="SelectEngineSetubiJyoho">
      SELECT
          MS_JYOHO_1
         ,MS_JYOHO_2
      FROM
          MS_SETUBI_JYOHO
      WHERE
          MS_STATION = '307300'
      AND MS_SETUBI  = '307ECU_SI'
      <isNotEmpty property="paramModelCd" prepend="AND">
        MS_B_KATA_C = #paramModelCd#
      </isNotEmpty>
      <isNotEmpty property="paramCountry" prepend="AND">
        MS_B_KUNI_C = #paramCountry#
      </isNotEmpty>
    </statement>


    <!-- ************************************************************************************** -->
    <!-- [エンジン部品一覧:機番ラベル印刷(一覧用)]                                                    -->
    <!-- ************************************************************************************** -->
    <statement id="SelectSerialPrintList">
      WITH
      MAX_DT AS (
        SELECT
          MODEL_CD,
          SERIAL_NO,
          PRINT_TYPE,
          MAX(PRINT_DT)  PRINT_DT
        FROM
          TT_SQ_PRINTOUT_RECORD
        WHERE
          PRINT_TYPE  = '01'
        GROUP BY
          MODEL_CD,
          SERIAL_NO,
          PRINT_TYPE
      )
      SELECT
        PRI.STATION_CD               stationCd,
        NULL                         stationNm,
        PRI.PRINT_CONTENTS_1         printCont1,
        PRI.PRINT_CONTENTS_2         printCont2,
        PRI.PRINT_CONTENTS_3         printCont3,
        PRI.PRINT_CONTENTS_5         printCont5,
        PRI.PRINT_DT                 printDt,
        PRI.MODEL_CD                 productModelCd,
        SUBSTR(PRI.SERIAL_NO,2,6)    serial6,
        <!--CASE
        WHEN PRI.PRINT_CONTENTS_3 = '1' THEN '対象'
        ELSE NULL
        END PIN_KBN,-->
      CASE
        WHEN PRI.AUTO_FLAG ='0' THEN '手動'
        WHEN PRI.AUTO_FLAG ='1' THEN '自動'
        END autoFlag
      FROM
      TT_SQ_PRINTOUT_RECORD PRI
      INNER JOIN MAX_DT DT ON
      (PRI.MODEL_CD = DT.MODEL_CD      AND
      PRI.SERIAL_NO = DT.SERIAL_NO   AND
      PRI.PRINT_DT = DT.PRINT_DT
      )
      <dynamic prepend="WHERE">
          <isNotEmpty property="printKbn" prepend="AND">
            PRI.PRINT_TYPE = #printKbn#
          </isNotEmpty>
          <isNotEmpty property="paramProductModelCd" prepend="AND">
            PRI.MODEL_CD = #paramProductModelCd#
          </isNotEmpty>
          <isNotEmpty property="paramSerial" prepend="AND">
            PRI.SERIAL_NO = #paramSerial#
          </isNotEmpty>
          <isNotEmpty property="stationCd" prepend="AND">
            PRI.STATION_CD = #stationCd#
          </isNotEmpty>
          <!-- [機番検索](modelCd/serial6メンバを含むリスト) -->
          <isNotEmpty property="paramSerialList" prepend="AND">
            (PRI.MODEL_CD, PRI.SERIAL_NO) IN
            <iterate property="paramSerialList" open="(" close=")" conjunction="," >
              (#paramSerialList[].productModelCd#, #paramSerialList[].serial#)
            </iterate>
          </isNotEmpty>
        </dynamic>
    </statement>

    <!-- ************************************************************************************** -->
    <!-- [エンジン部品詳細:機番ラベル検索]                                          -->
    <!-- ************************************************************************************** -->
    <statement id="SelectSerialPrint">
      SELECT
      PRI.STATION_CD               stationCd,
      NULL                         stationNm,
      PRI.PRINT_CONTENTS_1         printCont1,
      PRI.PRINT_CONTENTS_2         printCont2,
      PRI.PRINT_CONTENTS_3         printCont3,
      PRI.PRINT_CONTENTS_5         printCont5,
      PRI.PRINT_DT                 printDt,
      PRI.MODEL_CD                 productModelCd,
      SUBSTR(PRI.SERIAL_NO,2,6)    serial6,
      <!--CASE
      WHEN PRI.PRINT_CONTENTS_3 = '1' THEN '対象'
      ELSE NULL
      END PIN_KBN,-->
      CASE
        WHEN PRI.AUTO_FLAG ='0' THEN '手動'
        WHEN PRI.AUTO_FLAG ='1' THEN '自動'
      END autoFlag
      FROM
        TT_SQ_PRINTOUT_RECORD PRI
      WHERE
      PRI.PRINT_TYPE = '01'
      <isNotEmpty property="paramProductModelCd" prepend="AND">
          PRI.MODEL_CD = #paramProductModelCd#
        </isNotEmpty>
        <isNotEmpty property="paramSerial" prepend="AND">
          PRI.SERIAL_NO = #paramSerial#
        </isNotEmpty>
        <isNotEmpty property="stationCd" prepend="AND">
          PRI.STATION_CD = #stationCd#
        </isNotEmpty>
      <!-- [機番検索](modelCd/serial6メンバを含むリスト) -->
      <isNotEmpty property="paramSerialList" prepend="AND">
        (PRI.MODEL_CD, PRI.SERIAL_NO) IN
        <iterate property="paramSerialList" open="(" close=")" conjunction="," >
          (#paramSerialList[].productModelCd#, #paramSerialList[].serial#)
        </iterate>
      </isNotEmpty>
      ORDER BY
      PRI.PRINT_DT DESC
    </statement>

    <!-- ************************************************************************************** -->
    <!-- [エンジン部品詳細:クボタ内製ECU検査情報詳細]                                          -->
    <!-- ************************************************************************************** -->
    <statement id="SelectInhouseEcuInspectionResultDetail">
      SELECT
        EIR.MODEL_TYPE                      modelType,
        EIR.PARTS_NUMBER                    partsNumber,
        EIR.CIRCUIT_BOARD_SERIAL            circuitBoardSerial,
        EIR.CONNECTOR_ASM_NUM               connectorAsmNum,
        EIR.CONNECTOR_ASM_MAX               connectorAsmMax,
        EIR.CONNECTOR_ASM_MIN               connectorAsmMin,
        EIR.CONNECTOR_ASM_MEASUREMENT1      connectorAsmMeasurement1,
        EIR.CONNECTOR_ASM_MEASUREMENT2      connectorAsmMeasurement2,
        EIR.CONNECTOR_ASM_MEASUREMENT3      connectorAsmMeasurement3,
        EIR.CONNECTOR_ASM_MEASUREMENT4      connectorAsmMeasurement4,
        EIR.CONNECTOR_ASM_RESULT            connectorAsmResult,
        EIR.DESICCANT_COAT_INSPX_RESULT     desiccantCoatInspxResult,
        EIR.DESICCANT_COAT_OPERATOR_NUM || '　' || ( SELECT 氏名漢字 FROM VIW_社員情報 WHERE 従業員番号 = EIR.DESICCANT_COAT_OPERATOR_NUM ) desiccantCoatOperator,
        EIR.HEAT_RADIAT_COAT_INSPX_RESULT   heatRadiatCoatInspxResult,
        EIR.CIRCUIT_BOARD_ASM_NUM           circuitBoardAsmNum,
        EIR.CIRCUIT_BOARD_ASM_MAX           circuitBoardAsmMax,
        EIR.CIRCUIT_BOARD_ASM_MIN           circuitBoardAsmMin,
        EIR.CIRCUIT_BOARD_ASM_MEASUREMENT1  circuitBoardAsmMeasurement1,
        EIR.CIRCUIT_BOARD_ASM_MEASUREMENT2  circuitBoardAsmMeasurement2,
        EIR.CIRCUIT_BOARD_ASM_MEASUREMENT3  circuitBoardAsmMeasurement3,
        EIR.CIRCUIT_BOARD_ASM_MEASUREMENT4  circuitBoardAsmMeasurement4,
        EIR.CIRCUIT_BOARD_ASM_MEASUREMENT5  circuitBoardAsmMeasurement5,
        EIR.CIRCUIT_BOARD_ASM_MEASUREMENT6  circuitBoardAsmMeasurement6,
        EIR.CIRCUIT_BOARD_ASM_RESULT        circuitBoardAsmResult,
        EIR.SEAL_MATERIAL_INSPX_RESULT      sealMaterialInspxResult,
        EIR.CASE_ASM_NUM                    caseAsmNum,
        EIR.CASE_ASM_MAX                    caseAsmMax,
        EIR.CASE_ASM_MIN                    caseAsmMin,
        EIR.CASE_ASM_MEASUREMENT1           caseAsmMeasurement1,
        EIR.CASE_ASM_MEASUREMENT2           caseAsmMeasurement2,
        EIR.CASE_ASM_MEASUREMENT3           caseAsmMeasurement3,
        EIR.CASE_ASM_MEASUREMENT4           caseAsmMeasurement4,
        EIR.CASE_ASM_RESULT                 caseAsmResult,
        EIR.LEAK_PRESSURE_VALUE             leakPressureValue,
        EIR.LEAK_AMOUNT_MAX                 leakAmountMax,
        EIR.LEAK_AMOUNT_MIN                 leakAmountMin,
        EIR.LEAK_AMOUNT                     leakAmount,
        EIR.LEAK_INSPECTION_RESULT          leakInspectionResult,
        EIR.LAST_INSPX_INJ14PEAK_CORRECT    lastInspxInj14peakCorrect,
        EIR.LAST_INSPX_INJ14CONST_CORRECT   lastInspxInj14constCorrect,
        EIR.LAST_INSPX_INJ23PEAK_CORRECT    lastInspxInj23peakCorrect,
        EIR.LAST_INSPX_INJ23CONST_CORRECT   lastInspxInj23constCorrect,
        EIR.LAST_INSPX_SCV_GAIN_CORRECT     lastInspxScvGainCorrect,
        EIR.LAST_INSPX_SCV_OFFSET_CORRECT   lastInspxScvOffsetCorrect,
        EIR.LAST_INSPX_RESULT               lastInspxResult,
        EIR.ECU_SERIAL                      ecuSerial,
        EIR.COMPLETION_DT                   completionDt
      FROM
        TT_SQ_ECU_INSPECTION_RESULT EIR
      WHERE
        ECU_SERIAL = #ecuSerial#
    </statement>

    <statement id="SelectInhouseEcuInspectionResultData">
      SELECT
        INSPECTION_RESULT_DATA inspectionResultData
      FROM
        TT_SQ_ECU_INSPECTION_RESULT
      WHERE
        ECU_SERIAL = #ecuSerial#
    </statement>
    
    <!-- ************************************************************************************** -->
    <!-- [エンジン部品一覧:基幹部品検索]                                                      -->
    <!-- ************************************************************************************** -->
    <statement id="SelectEngineCorePartsList">
      SELECT
        MP.MOUNT_DATE installDt, 
        MP.MS_STATION stationCd, 
        NULL stationNm, 
        MP.PARTS_TYPE partsType, 
        TI.PARTS_TYPE_NM partsTypeNm, 
        MP.MS_B_KATA_C productModelCd, 
        MP.MS_KIBAN serial6, 
        MP.RECORD_NO historyIndex, 
        MP.PARTS_NUM partsNum, 
        MP.PARTS_SERIAL partsSerial 
      FROM
        TM_SQ_CPT_TRACEABLE_ITEM TI 
      INNER JOIN TT_SQ_CPT_MOUNT_PARTS MP 
        ON TI.MS_STATION = MP.MS_STATION 
        AND TI.PARTS_TYPE = MP.PARTS_TYPE 
      WHERE
        TI.PRODUCT_KIND_CD = '10'
      <!-- [クラスコード検索] -->
      <isNotEmpty property="paramPartsCd" prepend="AND">
        TI.CLASS_CD = #paramPartsCd#
      </isNotEmpty>        
      <!-- [機番検索](modelCd/serial6メンバを含むリスト) -->
      <isNotEmpty property="paramSerialList" prepend="AND">
        (MP.MS_B_KATA_C, MP.MS_KIBAN) IN
        <iterate property="paramSerialList" open="(" close=")" conjunction="," >
          (#paramSerialList[].productModelCd#, #paramSerialList[].serial6#)
        </iterate>
      </isNotEmpty>
      <!-- [生産型式コード検索] -->
      <isNotEmpty property="paramProductModelCd" prepend="AND">
        MP.MS_B_KATA_C like #paramProductModelCd# || '%'
      </isNotEmpty>
      <!-- [生産型式コードリスト検索(型式名からの逆引き用)] -->
      <isNotEmpty property="paramProductModelCdList" prepend="AND">
        MP.MS_B_KATA_C IN
        <iterate property="paramProductModelCdList" open="(" close=")" conjunction="," >
          #paramProductModelCdList[]#
        </iterate>
      </isNotEmpty>
      <!-- [部品品番検索] -->
      <isNotEmpty property="paramPartsNum" prepend="AND">
        TRIM(MP.PARTS_NUM) like #paramPartsNum# || '%'
      </isNotEmpty>
      <!-- [部品機番検索] -->
      <isNotEmpty property="paramPartsSerial" prepend="AND">
        TRIM(MP.PARTS_SERIAL) like #paramPartsSerial# || '%'
      </isNotEmpty>      
      <!-- [発行日(FROM)検索] -->
      <isNotEmpty property="paramInstallDtFrom" prepend="AND">
        MP.MOUNT_DATE <![CDATA[>=]]> #paramInstallDtFrom#
      </isNotEmpty>
      <!-- [発行日(TO)検索] -->
      <isNotEmpty property="paramInstallDtTo" prepend="AND">
        MP.MOUNT_DATE <![CDATA[<=]]> #paramInstallDtTo#
      </isNotEmpty>
    </statement>
    
    <!-- ************************************************************************************** -->
    <!-- [エンジン部品詳細:基幹部品検索]                                                      -->
    <!-- ************************************************************************************** -->
    <statement id="SelectEngineCorePartsDetail">
      SELECT
        MP.MOUNT_DATE installDt, 
        MP.MS_STATION stationCd, 
        NULL stationNm, 
        MP.PARTS_TYPE partsType, 
        TI.PARTS_TYPE_NM partsTypeNm, 
        MP.MS_B_KATA_C productModelCd, 
        MP.MS_KIBAN serial6, 
        MP.RECORD_NO historyIndex, 
        MP.PARTS_NUM partsNum, 
        MP.PARTS_SERIAL partsSerial 
      FROM
        TM_SQ_CPT_TRACEABLE_ITEM TI 
        INNER JOIN TT_SQ_CPT_MOUNT_PARTS MP 
          ON TI.MS_STATION = MP.MS_STATION 
          AND TI.PARTS_TYPE = MP.PARTS_TYPE 
      WHERE
        TI.PRODUCT_KIND_CD = '10' AND
        TI.CLASS_CD = #paramPartsCd# AND 
        MP.MS_B_KATA_C = #paramProductModelCd# AND 
        MP.MS_KIBAN = #paramSerial#
      ORDER BY
        MP.PARTS_TYPE, 
        MP.MS_STATION, 
        MP.MS_B_KATA_C, 
        MP.MS_KIBAN, 
        MP.RECORD_NO DESC
    </statement>
  </statements>
</sqlMap>
